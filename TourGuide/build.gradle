buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
        classpath "io.franzbecker:gradle-lombok:4.0.0"
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'jacoco'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: "io.franzbecker.gradle-lombok"


bootJar {
    archivesBaseName = 'tourGuide'
    //archiveVersion =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    implementation group: 'org.javamoney', name: 'moneta', version: '1.3'
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.14'   
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'
    implementation(name:'gpsUtil', ext:'jar')
    implementation(name:'RewardCentral', ext:'jar')
    implementation(name:'TripPricer', ext:'jar')
    
    testImplementation("junit:junit")
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'
     
}


jacoco {
    toolVersion = "0.8.4"
//    reportsDir = file("$build/report/Jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}


test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }


test {
    jacoco {
        enabled = true
        destinationFile = file("$buildDir/jacoco/${name}.exec")
        includes = []
        excludes = []
        excludeClassLoaders = []
        includeNoLocationClasses = false
        sessionId = "<auto-generated value>"
        dumpOnExit = true
        classDumpDir = null
        output = JacocoTaskExtension.Output.FILE
        address = "localhost"
        port = 6300
        jmx = false
    }
}

}


test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}
